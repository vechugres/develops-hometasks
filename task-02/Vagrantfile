# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "debian/buster64"

  config.vm.network "forwarded_port", guest: 80, host: 8080
  config.vm.network "forwarded_port", guest: 81, host: 8081

  config.vm.provision "shell", inline: <<-SHELL

	sudo apt update
  sudo apt install mc -y
  sudo apt install -y lxc lxc-templates
  sudo systemctl start lxc
	apt remove gnupg
	apt install --reinstall gnupg2 -y
	apt install -y dirmngr
	sudo cp /vagrant/default.conf /etc/lxc/
	sudo cp /vagrant/lxc-net /etc/default/
	sudo systemctl restart lxc-net
  sudo iptables -t nat -A PREROUTING -p tcp -i eth0 --dport 80 -j DNAT --to-destination 10.0.10.20:80
  sudo iptables -t nat -A PREROUTING -p tcp -i eth0 --dport 80 -j DNAT --to-destination 10.0.10.21:81
  

  sudo lxc-create -n c1 -t download -- --dist centos --release 8-Stream --arch amd64 --keyserver hkp://keyserver.ubuntu.com
	sudo echo "lxc.net.0.ipv4.address = 10.0.10.20/24">>/var/lib/lxc/c1/config
	sudo echo "lxc.net.0.ipv4.gateway = 10.0.10.1">>/var/lib/lxc/c1/config
	sudo lxc-start -n c1
	sudo sleep 25s
	sudo lxc-attach -n c1 -- export PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin
	sudo lxc-attach -n c1 -- yum update
	sudo lxc-attach -n c1 -- yum install httpd -y
  sudo lxc-attach -n c2 -- yum install php -y
	sudo lxc-attach -n c1 -- systemctl enable httpd
	sudo lxc-attach -n c1 -- systemctl start httpd
	sudo lxc-attach -n c1 -- mkdir -p /var/www/static/html
	sudo lxc-attach -n c1 -- chmod -R 0755 /var/www/static/html
	sudo cp /vagrant/index.html /var/lib/lxc/c1/rootfs/var/www/static/html
	sudo lxc-attach -n c1 -- mkdir /etc/httpd/sites-available
	sudo lxc-attach -n c1 -- mkdir /etc/httpd/sites-enabled
	sudo cp /vagrant/static.conf /var/lib/lxc/c1/rootfs/etc/httpd/sites-available/
	sudo cp /vagrant/httpds.conf /var/lib/lxc/c1/rootfs/etc/httpd/conf/httpd.conf
	sudo lxc-attach -n c1 -- ln -s /etc/httpd/sites-available/static.conf /etc/httpd/sites-enabled/static.conf
	sudo lxc-attach -n c1 -- systemctl restart httpd
	

	sudo lxc-create -n c2 -t download -- --dist centos --release 8-Stream --arch amd64 --keyserver hkp://keyserver.ubuntu.com
	sudo echo "lxc.net.0.ipv4.address = 10.0.10.21/24">>/var/lib/lxc/c2/config
	sudo echo "lxc.net.0.ipv4.gateway = 10.0.10.1">>/var/lib/lxc/c2/config
	sudo lxc-start -n c2
	sudo sleep 25s
	sudo lxc-attach -n c2 -- export PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin
	sudo lxc-attach -n c2 -- yum update
	sudo lxc-attach -n c2 -- yum install httpd -y
	sudo lxc-attach -n c2 -- yum install php -y
	sudo lxc-attach -n c2 -- systemctl enable httpd
	sudo lxc-attach -n c2 -- systemctl start httpd	
	sudo lxc-attach -n c2 -- mkdir -p /var/www/dynamic/html
	sudo lxc-attach -n c2 -- chmod -R 0755 /var/www/dynamic/html
	sudo cp /vagrant/index.php /var/lib/lxc/c2/rootfs/var/www/dynamic/html
	sudo lxc-attach -n c2 -- mkdir /etc/httpd/sites-available
	sudo lxc-attach -n c2 -- mkdir /etc/httpd/sites-enabled
	sudo cp /vagrant/dynamic.conf /var/lib/lxc/c2/rootfs/etc/httpd/sites-available/
	sudo cp /vagrant/httpdd.conf /var/lib/lxc/c2/rootfs/etc/httpd/conf/httpd.conf
	sudo lxc-attach -n c2 -- ln -s /etc/httpd/sites-available/dynamic.conf /etc/httpd/sites-enabled/dynamic.conf
	sudo lxc-attach -n c2 -- systemctl restart httpd
	
 SHELL
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
