Vagrant.configure("2") do |config|

  config.vm.box = "generic/centos8"
  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/vagrant", disable = false

  config.vm.provider "virtualbox" do |vb|
    vb.memory = 1024
    vb.cpus   = 1
  end

#   config.vm.provision "shell", inline: <<-SHELL
#      sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
#      service sshd restart
#      echo -e "vagrant\nvagrant" | passwd vagrant
#SHELL

#  config.vm.define "slave1.puppet" do |slave|
#    slave.vm.network "private_network", ip: "192.168.55.10"
#    slave.vm.hostname = "slave1.puppet"
#    slave.vm.provision "shell", inline: <<-SHELL
#      sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
#      service sshd restart
#      echo -e "vagrant\nvagrant" | passwd vagrant
#SHELL
#
#  end
#
#  config.vm.define "slave2.puppet" do |slave|
#    slave.vm.network "private_network", ip: "192.168.55.15"
#    slave.vm.hostname = "slave2.puppet"
#    slave.vm.provision "shell", inline: <<-SHELL
#      sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
#      service sshd restart
#      echo -e "vagrant\nvagrant" | passwd vagrant
#SHELL
#
#  end

  config.vm.define "minecraft.puppet" do |slave|
    slave.vm.network "private_network", ip: "192.168.55.20"
    slave.vm.hostname = "minecraft.puppet"
    slave.vm.provision "shell", inline: <<-SHELL
      sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
      service sshd restart
      echo -e "vagrant\nvagrant" | passwd vagrant
SHELL

  end

  config.vm.define "master.puppet", primary: true do |master|
    master.vm.network "private_network", ip: "192.168.55.5"
    master.vm.hostname = "master.puppet"

  master.vm.provision "ansible_local" do |ansible|
    ansible.playbook = "Playbook.yml"
    ansible.become = true
    ansible.inventory_path = "inventory/hosts"
    ansible.limit = "all"
  end

end
