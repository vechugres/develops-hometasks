pipeline {
    
        agent any

             tools {
                go 'Go 1.16'
             }
                stages {

                    stage("cloning git") {
                        steps {
                                git url: 'https://github.com/Fenikks/word-cloud-generator'
            }
        }

                        stage('Check code and test') {
                            steps {
                                    sh '''make lint
                                          make test '''
            }
        }

                    stage('build') {
                        steps {
                                sh '''export GOPATH=$WORKSPACE/go
                                    export PATH="$PATH:$(go env GOPATH)/bin"
                                    go get github.com/tools/godep   
                                    go get github.com/smartystreets/goconvey
                                    go get github.com/GeertJohan/go.rice/rice
                                    go get github.com/wickett/word-cloud-generator/wordyapi
                                    go get github.com/gorilla/mux
                                    sed -i "s/1.DEVELOPMENT/1.$BUILD_NUMBER/g" static/version
                                    GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v
                                    gzip artifacts/word-cloud-generator
                                    mv artifacts/word-cloud-generator.gz artifacts/word-cloud-generator
                                    ls -l artifacts/'''
            }
        }

                     stage('upload to nexus') {
                        steps {
                                nexusArtifactUploader artifacts: [[artifactId: 'word-cloud-generator', classifier: '', file: 'artifacts/word-cloud-generator', type: 'gz']], credentialsId: 'nexus-creds', groupId: "*/master", nexusUrl: "192.168.33.90:8081", nexusVersion: 'nexus3', protocol: 'http', repository: 'word-cloud-build', version: '1.$BUILD_NUMBER'
                }
            }

                    stage('on stage') {
                        steps {
                                sh '''
                                    sshpass -p 'vagrant' ssh vagrant@192.168.33.80 -o StrictHostKeyChecking=no " cd /opt/wordcloud/
                                    sudo curl -u downloader:downloader -X GET "http://192.168.33.90:8081/repository/world-cloud-build/1/world-cloud-generator/1.$BUILD_NUMBER/world-cloud-generator-1.$BUILD_NUMBER.gz" -o /opt/wordcloud/word-cloud-generator.gz
                                    if [[ $? -ne 0 ]];
                                    then
                                        echo "File not found"
                                        exit 1
                                    else
                                    sudo service wordcloud stop
                                    sudo gunzip -f /opt/wordcloud/word-cloud-generator.gz
                                    sudo chmod +x /opt/wordcloud/word-cloud-generator
                                    sudo service wordcloud start
                                    fi"
                                '''
                }
            }

                    stage ('parallel tests') {
                        parallel {
                                stage ("test1"){
                                    steps {
                                    sh  '''res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/version | jq '. | length'`
                            if [ "1" != "$res" ]; then
                            exit 99
                            fi
                            res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/api | jq '. | length'`
                            if [ "7" != "$res" ]; then
                            exit 99
                            fi'''
                                }
                            }
                                stage ("test2"){
                                    steps {
                                    sh  '''res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/version | jq '. | length'`
                            if [ "1" != "$res" ]; then
                            exit 99
                            fi
                            res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/api | jq '. | length'`
                            if [ "7" != "$res" ]; then
                            exit 99
                            fi'''
                    }
                }
            }
        }

                                stage('on prod') {
                                    steps {
                                        sh '''
                                        sshpass -p 'vagrant' ssh vagrant@192.168.33.85 -o StrictHostKeyChecking=no " cd /opt/wordcloud/
                                        sudo curl -u downloader:downloader -X GET "http://192.168.33.90:8081/repository/world-cloud-build/$git_branch/world-cloud-generator/1.$BUILD_NUMBER/world-cloud-generator-1.$BUILD_NUMBER.gz" -o /opt/wordcloud/word-cloud-generator.gz
                                        if [[ $? -ne 0 ]];
                                            then
                                                echo "File not found"
                                                exit 1
                                            else
                                            sudo service wordcloud stop
                                            sudo gunzip -f /opt/wordcloud/word-cloud-generator.gz
                                            sudo chmod +x /opt/wordcloud/word-cloud-generator
                                            sudo service wordcloud start
                                            fi"
                                    '''
                }
            }
        }    
    }
    
