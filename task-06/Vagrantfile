Vagrant.configure("2") do |config|

  config.vm.box = "generic/debian11"
  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/vagrant", disable = false

  config.vm.define "staging.vm" do |staging|
    staging.vm.network "private_network", ip: "192.168.55.15"
    staging.vm.provider("virtualbox") { |vb| vb.memory = 512 }
    staging.vm.provision "shell", inline: <<-SHELL
      sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
      service sshd restart
      echo -e "vagrant\nvagrant" | passwd vagrant
SHELL
  end

  config.vm.define "production.vm" do |production|
    production.vm.network "private_network", ip: "192.168.55.20"
    production.vm.provider("virtualbox") { |vb| vb.memory = 512 }
    production.vm.provision "shell", inline: <<-SHELL
      sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
      service sshd restart
      echo -e "vagrant\nvagrant" | passwd vagrant
SHELL
  end

  config.vm.define "nexus.vm" do |nexus|
    nexus.vm.network "private_network", ip: "192.168.55.10"
    nexus.vm.provider("virtualbox") { |vb| vb.memory = 1024 }
    nexus.vm.provision "shell", inline: <<-SHELL
      sed -i "s/^PasswordAuthentication no\$/PasswordAuthentication yes/g" /etc/ssh/sshd_config
      service sshd restart
      echo -e "vagrant\nvagrant" | passwd vagrant 
SHELL
  end

  config.vm.define "jenkins.vm", primary: true do |jenkins|
    jenkins.vm.network "private_network", ip: "192.168.55.5"
    jenkins.vm.provider("virtualbox") { |vb| vb.memory = 1024 }

  jenkins.vm.provision "ansible_local" do |ansible|
    ansible.playbook = "playbook.yml"
    ansible.galaxy_role_file = "inventory/requirements.yml"
    ansible.galaxy_roles_path = "/usr/share/ansible/collections"
    ansible.galaxy_command = "sudo ansible-galaxy collection install -r%{role_file} -p%{roles_path} --force"
    ansible.inventory_path = "inventory/hosts"
    ansible.become = true
    ansible.limit = "all"
  end

  end

end
