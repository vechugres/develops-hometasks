---
#JENKINS
- name: instal and configure jenkins
  hosts: jenkins
  become: true
  tasks:
#jenkins vars
    - include_vars: inventory/vars.yml
#os preparation
    - name: apt update
      shell: apt update

    #- name: upgrade the OS
    #  apt:
    #    upgrade: dist

    - name: install  pkg's
      apt:
        pkg:
        - git
        - build-essential
        - default-jre
        - python3-pip
        state: latest
#add jenkins's repo and install jenkins
    - name: ensure the jenkins apt repository key is installed
      apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
        state: present

    - name: ensure the repository is configured
      apt_repository:
        repo: deb https://pkg.jenkins.io/debian-stable binary/
        state: present

    - name: install jenkins
      apt:
        name: jenkins
        state: latest
#jenkins gonfiguration
    - name: install python
      pip:
        name:
          - python-jenkins
          - lxml

    - name: jenkins needs to rest
      service:
        name: jenkins
        state: stopped

    - name: mkdir users and jobs
      file:
        path: "{{ item }}"
        state: directory
        group: jenkins
        owner: jenkins
        mode: '0755'
      with_items:
        - /var/lib/jenkins/users/jadmin_7909463358859378454
        - /var/lib/jenkins/jobs/mygobuild

    - name: Copy config files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        group: jenkins
        owner: jenkins
        mode: '0755'
        force: true
      with_items:
        - { src: '/vagrant/inventory/jenkins/jobs/mygobuild/config.xml', dest: '/var/lib/jenkins/jobs/mygobuild/config.xml' }
        - { src: '/vagrant/inventory/jenkins/users/jadmin_7909463358859378454/config.xml', dest: '/var/lib/jenkins/users/jadmin_7909463358859378454/config.xml' }
        - { src: '/vagrant/inventory/jenkins/users/users.xml', dest: '/var/lib/jenkins/users/users.xml' }
        - { src: '/vagrant/inventory/jenkins/config.xml', dest: '/var/lib/jenkins/config.xml' }
        - { src: '/vagrant/inventory/jenkins/org.jenkinsci.plugins.golang.GolangBuildWrapper.xml', dest: '/var/lib/jenkins/' }

    - name: disable wizard
      lineinfile:
         path: "{{ item.path }}"
         state: present
         regexp: "{{ item.exp }}"
         line: "{{ item.n_ln }}"
      with_items:
        - { path: "/lib/systemd/system/jenkins.service", exp: '^Environment="JAVA_OPTS=-Djava.awt.headless=true"', n_ln: 'Environment="JAVA_OPTS=-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"' }
        - { path: "/etc/default/jenkins", exp: '^JAVA_ARGS="-Djava.awt.headless=true"', n_ln: 'JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"' }

    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: enabled jenkins
      service:
        name: jenkins
        state: started
        enabled: true

    - name: install plugins
      jenkins_plugin:
        name: "{{ item }}"
        url_username: "{{ jenkins_user }}"
        url_password: "{{ jenkins_passw }}"
        url: "{{ jenkins_url }}"
        with_dependencies: yes
      with_items:
        - timestamper
        - git
        - github
        - golang
        - Pipeline
        - nexus-artifact-uploader
        - ssh

    - name: restarted jenkins
      service:
        name: jenkins
        state: restarted
#do first build
    - name: make build
      community.general.jenkins_build:
        name: "mygobuild"
        build_number: 1
        state: present
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_passw }}"
        url: "{{ jenkins_url }}"

#NEXUS
- name: install Nexus
  hosts: nexus
  become: true

  tasks:
    - name: install Java
      apt:
        name: java-1.8.0-openjdk
        state: present

    - name: download Nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/nexus-3.38.1-01-unix.tar.gz
        checksum: md5:d3d2e8ebef0816f412b66fe7a374f923
        dest: /opt/nexus3.tar.gz

    - name: create workdir
      file:
        path: /opt/nexus
        state: directory

    - name: unpack Nexus
      unarchive:
        src: /opt/nexus3.tar.gz
        dest: /opt/nexus/

    - name: find last release
      find:
        file_type: directory
        patterns: 'nexus*'
        path: /opt/nexus
      register: nexus_path

    - name: create nexus symlink
      file:
        path: /opt/nexus/nexus
        state: link
        src: "{{ nexus_path.files[0]['path'] }}"
      when: nexus_path.matched > 0

    - name: copy environment file
      copy:
        src: inventory/nexus/nexus-server
        dest: /etc/default/nexus-server

    - name: copy systemd file
      copy:
        src: nexus.service
        dest: /etc/systemd/system/nexus.service

    - name: start Nexus service
      systemd:
        name: nexus
        enabled: true
        state: started

    - name: stop firewall
      systemd:
        name: firewalld
        enabled: false
        state: stopped
